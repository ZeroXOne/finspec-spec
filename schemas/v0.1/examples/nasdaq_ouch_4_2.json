{
    "finspec": "0.1",
    "info": {
        "version": "4.2-20160111",
        "issueDate": "2015-01-11",
        "liveDate": "2015-02-01",
        "issuer": "NASDAQ",
        "title": "OUCH Version 4.2",
        "contacts": [
            {
                "name": "Trading Services",
                "email": "tradingservices@nasdaqomx.com",
                "url": "http://nasdaqtrader.com/Trader.aspx?id=TradingSpecs"
            }
        ]
    },
    "protocol": "ouch",
    "protocolVersion": "4.2",
    "sessionMessages": [
        {
            "name": "Debug",
            "wireId": "+",
            "direction": "both",
            "description": "A debug packet can be sent by either side of a SoupBinTCP connection at anytime. Debug packets are intended to provide human readable text that may aid in debugging problems. Debug Packets should be ignored by both client and server application software.",
            "fields": [
                {
                    "position": 0,
                    "length": 2,
                    "name": "Packet Length",
                    "type": "integer",
                    "format": "uInt16",
                    "description": "Number of bytes after this field until the next packet"                    
                },
                {
                    "position": 2,
                    "length": 1,
                    "name": "Packet Type",
                    "type": "char",
                    "values": [
                        {
                            "FIXME": "this is ugly",
                            "enum": "+",
                            "description": "Debug Packet (+)"
                        }
                    ]
                },
                {
                    "position": 3,
                    "name": "Text",
                    "type": "string",
                    "length": "FIXME"
                }
            ]
        },
        {
            "name": "Login Accepted"
            "wireId": "A",
            "direction": "out",
            "description": "The SoupBinTCP server sends a Login Accepted Packet in response to receiving a valid Login Request from the client. This packet will always be the first non-debug packet sent by the server after a successful login request.",
            "fields": [
                {
                    "position": 0,
                    "length": 2,
                    "name": "Packet Length",
                    "type": "integer",
                    "format": "uInt16",
                    "description": "Number of bytes after this field until the next packet",
                },
                {
                    "position": 2,
                    "length": 1,
                    "name": "Packet Type",
                    "type": "char",
                    "values": [
                        {
                            "FIXME": "ugly",
                            "enum": "A",
                            "description": "Login Accepted (A)"
                        }
                    ],
                    "description": "Login Accepted Packet"
                },
                {
                    "position": 3,
                    "length": 10,
                    "name": "Session",
                    "type": "string",
                    "description": "The session ID of the session that is now logged into. Left padded with spaces.",
                    "FIXME": "padding spec"
                },
                {
                    "position": 13,
                    "length": 20,
                    "name": "Sequence Number",
                    "type": "string",
                    "format": "FIXME",
                    "description": "The sequence number in ASCII of the next Sequenced Message to be sent. Left padded with spaces.",
                    "FIXME": "padding spec"
                }
            ]
        },
        {
            "name": "Login Rejected"
            "wireId": "J",
            "direction": "out",
            "description": "The SoupBinTCP server sends this packet in response to an invalid Login Request Packet from the client. The server closes the socket connection after sending the Login Reject Packet. The Login Rejected Packet will be the only non-debug packet sent by the server in the case of an unsuccessful login attempt.",
            "fields": [
                {
                    "position": 0,
                    "length": 2,
                    "name": "Packet Length",
                    "type": "integer",
                    "format": "uInt16",
                    "description": "Number of bytes after this field until the next packet",
                },
                {
                    "position": 2,
                    "length": 1,
                    "name": "Packet Type",
                    "type": "char",
                    "values": [
                        {
                            "FIXME": "ugly",
                            "enum": "J",
                            "description": "Login Rejected (J)"
                        }
                    ],
                    "description": "Login Rejected Packet"
                },
                {
                    "position": 3,
                    "length": 1,
                    "name": "Reject Reason Code",
                    "type": "char",
                    "description": "",
                    "values": [
                        {
                            "enum": "A",
                            "description": "Not Authorized. There was an invalid username and password combination in the Login Request Message."
                        },
                        {
                            "enum": "S",
                            "description": "Session not available. The Requested Session in the Login Request Packet was either invalid or not available."
                        }
                    ]
                },
            ]
        },
        {
            "name": "Sequenced Data"
        },
        {
            "name": "Server Heartbeat"
            "wireId": "H",
            "direction": "in",
            "description": "The server should send a Server Heartbeat Packet anytime more than 1 second passes where no data has been sent to the client. The client can then assume that the link is lost if it does not receive anything for an extended period of time.",
            "fields": [
                {
                    "position": 0,
                    "length": 2,
                    "name": "Packet Length",
                    "type": "integer",
                    "format": "uInt16",  /* FIXME: endian */
                    "description": "Number of bytes after this field until the next packet"
                },
                {
                    "position": 2,
                    "length": 1,
                    "name": "Packet Type",
                    "type": "char",
                    "values": [
                        {
                            /* FIXME: need better way to do this */
                            "enum": "H",
                            "description": "Server Heartbeat (H)"
                        }
                    ],
                    "description": "Server Heartbeat Packet"
                }
            ]
        },
        {
            "name": "End of Session"
            "wireId": "Z",
            "direction": "in",
            "description": "The server will send an End of Session Packet to denote that the current session is finished. The connection will be closed shortly after this packet, and the user will no longer be able to reconnect to the current session.",
            "fields": [
                {
                    "position": 0,
                    "length": 2,
                    "name": "Packet Length",
                    "type": "integer",
                    "format": "uInt16", /* FIXME: endian */
                    "description": "Number of bytes after this field until the next packet"
                },
                {
                    "position": 2,
                    "length": 1,
                    "name": "Packet Type",
                    "type": "char",
                    "values": [
                        {
                            /* FIXME: need a better way to do this */
                            "enum": "Z",
                            "description": "End of Session (Z)"
                        }
                    ],
                    "description": "End of Session Packet"
                }
            ]
        },
        {
            "name": "Login Request",
            "wireId": "L",
            "direction": "out",
            "description": "The SoupBinTCP client must send a Login Request Packet immediately upon establishing a new TCP/IP socket connection to the server.
Client and server must have mutually agreed upon the username and password fields. They provide simple authentication to prevent a client from inadvertently connecting to the wrong server.
Both Username and Password are case-insensitive and should be padded on the right with spaces.
The server can terminate an incoming TCP/IP socket if it does not receive a Login Request Packet within a reasonable period of time (typically 30 seconds).",
            "fields": [
                {
                    "position": 0,
                    "length": 2,
                    "name": "Packet Length",
                    "type": "integer",
                    "format": "uInt16", /* FIXME: endian */
                    "description": "Number of bytes after this field until the next packet"
                },
                {
                    "position": 2,
                    "length": 1,
                    "name": "Packet Type",
                    "type": "char",
                    "values": [
                        {
                            "enum": "L",
                            "description": "Login Request (L)"
                        }
                    ],
                    "description": "Login Request Packet"
                },
                {
                    "position": 3,
                    "length": 6,
                    "name": "Username",
                    "type": "string",
                    "description": "Username"
                },
                {
                    "position": 9,
                    "length": 10,
                    "name": "Password",
                    "type": "string",
                    "description": "Password"
                },
                {
                    "position": 19,
                    "length": 10,
                    "name": "Requested Session",
                    "type": "string",
                    "description": "Specifies the session the client would like to log into, or all blanks to log into the currently active session."
                },
                {
                    "position": 29,
                    "length": 20,
                    "name": "Requested Sequence Number",
                    "type": "string",
                    /* FIXME: semantic type "integer" would be good here */
                    "description": "Specifies the next sequence number in ASCII the client wants to receive upon connection, or 0 to start receiving the most recently generated message."
                    
                },
            ]
        },
        {
            "name": "Unsequenced Data"
        },
        {
            "name": "Client Heartbeat"
        },
        {
            "name": "Logout Request"
        }
    ]
}
